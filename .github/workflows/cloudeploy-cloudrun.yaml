name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "ver" ]

env:
  PROJECT_ID: "abhidhrk-ver" # TODO: update Google Cloud project id
  GAR_LOCATION: "us-central1" # TODO: update Artifact Registry location
  SERVICE: "gpg-decryption" # TODO: update Cloud Run service name
  REGION: "us-central1" # TODO: update Cloud Run service region
  IMAGE: "gpg"
  GPG_SECRET_ID: "privatekey" # TODO: update your environment variables
  PASPPHRASE_SECRET_ID: "passphrase"
  DESTINATION_BUCKET: "gpg_encrypted_files_abhicyb"
  APP: app
  REPO: my-ver-tf-repo

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Authenticate with Google Cloud
      - name: Google Auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CRED }}'

      # Build and push Docker image using Cloud Build
      - name: Cloud Build
        run: |-
          gcloud builds submit --gcs-log-dir gs://build-logs-ver --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE}}:${{ github.sha }}" .

      - name: 'Render templatised config manifests'
        run: |-
          export PROJECT_ID="${{ env.PROJECT_ID }}"
          export REGION="${{ env.GAR_LOCATION }}"
          for template in $(ls config/*.template.yaml); do envsubst < ${template} > ${template%%.*}.yaml ; done

      - name: 'Create Cloud Deploy delivery pipeline'
        run: |-
          gcloud deploy apply --file config/clouddeploy.yaml --region ${{ env.GAR_LOCATION }}

      - name: 'Create release name'
        run: |-
          echo "RELEASE_NAME=${{ env.APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> ${GITHUB_ENV}

      - name: 'Create Cloud Deploy release'
        id: 'release'
        uses: 'google-github-actions/create-cloud-deploy-release@v0'
        with:
          delivery_pipeline: '${{ env.APP }}'
          name: '${{ env.RELEASE_NAME }}'
          region: '${{ env.GAR_LOCATION }}'
          #description: '${{ env.GITHUB_COMMIT_MSG }}'
          skaffold_file: 'config/skaffold.yaml'
          images: 'app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ github.sha }}'

      - name: 'Report Cloud Deploy release'
        run: |-
          echo "Created release ${{ steps.release.outputs.name }} "
          echo "Release link ${{ steps.release.outputs.link }} "
          
      # Deploy to Cloud Run with environment variables
      # - name: Deploy to Cloud Run
      #   uses: google-github-actions/deploy-cloudrun@v0
      #   with:
      #     service: ${{ env.SERVICE }}
      #     region: ${{ env.REGION }}
      #     allow_unauthenticated: true
      #     image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ github.sha }}"
      #     env_vars: |
      #       PROJECT_ID=${{ env.PROJECT_ID }}
      #       GPG_SECRET_ID=${{ env.GPG_SECRET_ID }}
      #       PASPPHRASE_SECRET_ID=${{ env.PASPPHRASE_SECRET_ID }}
      #       DESTINATION_BUCKET= ${{ env.DESTINATION_BUCKET }}
